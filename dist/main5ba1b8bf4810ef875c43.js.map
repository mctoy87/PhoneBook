{"version":3,"file":"main5ba1b8bf4810ef875c43.js","mappings":"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","sources":["webpack://phonebook/./src/script/createElements.js","webpack://phonebook/./src/script/serviceStorage.js","webpack://phonebook/./src/script/render.js","webpack://phonebook/./src/script/control.js","webpack://phonebook/./src/index.js"],"sourcesContent":["// создает контейнер для header\r\nconst createContainer = () => {\r\n  const container = document.createElement('div');\r\n  container.classList.add('container');\r\n  return container;\r\n};\r\n\r\nconst createHeader = () => {\r\n  const header = document.createElement('header');\r\n  header.classList.add('header');\r\n  // т.к. в header все элементы располагаются внутри контейнера\r\n  const headerContainer = createContainer();\r\n  header.append(headerContainer);\r\n  // привязать header - headerContainer\r\n  // далее можно исп-ть св-во header.headerContainer для добавления эл-в\r\n  header.headerContainer = headerContainer;\r\n  return header;\r\n};\r\n\r\nconst createLogo = title => {\r\n  const h1 = document.createElement('h1');\r\n  h1.classList.add('logo');\r\n  h1.textContent = `Телефонный справочник. ${title}`;\r\n\r\n  return h1;\r\n};\r\n\r\nconst createMain = () => {\r\n  const main = document.createElement('main');\r\n  const mainContainer = createContainer();\r\n  main.append(mainContainer);\r\n  // позволяет добавлять внутрь эл-ты\r\n  main.mainContainer = mainContainer;\r\n  return main;\r\n};\r\n\r\nconst createButtonsGroup = params => {\r\n  const btnWrapper = document.createElement('div');\r\n  btnWrapper.classList.add('btn-wrapper');\r\n  // заполним кнопками - перебор массива и возврат кнопок\r\n  // деструктуируем объект\r\n  const btns = params.map(({className, type, text}) => {\r\n    // создаем кнопки\r\n    const button = document.createElement('button');\r\n    // заполним данными из атрибутов\r\n    button.className = className;\r\n    button.type = type;\r\n    button.textContent = text;\r\n    return button;\r\n  });\r\n  // вставить btns в btnWrapper\r\n  btnWrapper.append(...btns);\r\n  // возвращаем объект ({}- после return)\r\n  return {\r\n    btnWrapper,\r\n    btns,\r\n  };\r\n};\r\n\r\nconst createTable = () => {\r\n  const table = document.createElement('table');\r\n  table.classList.add('table', 'table-striped');\r\n\r\n  const thead = document.createElement('thead');\r\n  thead.insertAdjacentHTML('beforeend', `\r\n    <tr>\r\n      <th class=\"delete\">Удалить</th>\r\n      <th class=\"firstName\">Имя</th>\r\n      <th class=\"surName\">Фамилия</th>\r\n      <th>Телефон</th>\r\n    </tr>\r\n  `);\r\n\r\n  const tbody = document.createElement('tbody');\r\n  // вставить в таблицу\r\n  table.append(thead, tbody);\r\n  // чтобы не возвращать объект table, а на прямую\r\n  table.tbody = tbody;\r\n  table.thead = thead;\r\n\r\n  return table;\r\n};\r\n\r\nconst createForm = () => {\r\n  const overlay = document.createElement('div');\r\n  overlay.classList.add('form-overlay');\r\n\r\n  // создать модалку\r\n  const form = document.createElement('form');\r\n  form.classList.add('form');\r\n  form.insertAdjacentHTML('beforeend', `\r\n    <button class=\"close\" type=\"button\"></button>\r\n    <h2 class=\"form-title\">Добавить контакт</h2>\r\n    <div class=\"form-group\">\r\n      <label class=\"form-label\" for=\"name\" >Имя:</label>\r\n      <input class=\"form-input\" name=\"name\" \r\n        id=\"name\" type=\"text\" required>\r\n    </div>\r\n      <div class=\"form-group\">\r\n      <label class=\"form-label\" for=\"surname\" >Фамилия:</label>\r\n    <input class=\"form-input\" name=\"surname\" \r\n      id=\"surname\" type=\"text\" required>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label class=\"form-label\" for=\"phone\">Телефон:</label>\r\n      <input class=\"form-input\" name=\"phone\" \r\n        id=\"phone\" type=\"number\" required>\r\n    </div>\r\n  `);\r\n\r\n  // кнопки в модалке скопируем из buttonGroup\r\n  const buttonGroup = createButtonsGroup([\r\n    // придумываем параметры кнопок\r\n    {\r\n      className: 'btn btn-primary mr-3',\r\n      type: 'submit',\r\n      text: 'Добавить',\r\n    },\r\n    {\r\n      className: 'btn btn-danger',\r\n      type: 'reset',\r\n      text: 'Отмена',\r\n    },\r\n  ]);\r\n\r\n  form.append(...buttonGroup.btns);\r\n\r\n  overlay.append(form);\r\n\r\n  return {\r\n    overlay,\r\n    form,\r\n  };\r\n};\r\n\r\nconst createFooter = () => {\r\n  const footer = document.createElement('footer');\r\n  footer.classList.add('footer');\r\n  // т.к. в footer все элементы располагаются внутри контейнера\r\n  const footerContainer = createContainer();\r\n  footer.append(footerContainer);\r\n  // привязать footer - footerContainer\r\n  // далее можно исп-ть св-во footer.footerContainer для добавления эл-в\r\n  footer.footerContainer = footerContainer;\r\n  return footer;\r\n};\r\n\r\nconst createRow = ({name: firstName, surname, phone}) => {\r\n  const tr = document.createElement('tr');\r\n  tr.classList.add('contact');\r\n\r\n  const tdDel = document.createElement('td');\r\n  tdDel.classList.add('delete');\r\n\r\n  const buttonDel = document.createElement('button');\r\n  tdDel.append(buttonDel);\r\n  buttonDel.classList.add('del-icon');\r\n\r\n  const tdName = document.createElement('td');\r\n  tdName.textContent = firstName;\r\n\r\n  const tdSurname = document.createElement('td');\r\n  tdSurname.textContent = surname;\r\n\r\n  const tdPhone = document.createElement('td');\r\n  tdPhone.classList.add('telefon');\r\n  const phoneLink = document.createElement('a');\r\n  phoneLink.href = `tel:${phone}`;\r\n  phoneLink.textContent = phone;\r\n  tr.phoneLink = phoneLink;\r\n  tdPhone.append(phoneLink);\r\n\r\n  const tdEdit = document.createElement('button');\r\n  tdEdit.classList.add('btn', 'btn-outline-danger', 'btn-sm');\r\n  tdEdit.insertAdjacentHTML('beforeend', `\r\n  <i>Редактировать</i>\r\n  `);\r\n  tdEdit.style.cssText = `\r\n    padding-left: 20px;\r\n    background-image: url('../phonebook/img/edit.svg');\r\n    background-repeat: no-repeat;\r\n    background-position: 0 50%;\r\n  `;\r\n  tr.append(tdDel, tdName, tdSurname, tdPhone, tdEdit);\r\n  return tr;\r\n};\r\n\r\nexport default {\r\n  createHeader,\r\n  createLogo,\r\n  createMain,\r\n  createButtonsGroup,\r\n  createTable,\r\n  createForm,\r\n  createFooter,\r\n  createRow,\r\n};\r\n","// работа с localStorage\r\n// получение контактов из хранилища\r\nexport const getContactData = () => (localStorage.getItem('phonebook') ?\r\nJSON.parse(localStorage.getItem('phonebook')) : []);\r\n\r\n// записать данные в ханилище\r\nexport const setContactData = (data) =>\r\n  localStorage.setItem('phonebook', JSON.stringify(data));\r\n\r\n// удаляет из localStorage\r\nexport const removeContactData = phone => {\r\n  const data = getContactData();\r\n  const dataAfterDelete = data.filter(item => item.phone !== phone);\r\n  setContactData(dataAfterDelete);\r\n};\r\n// добавляет в localStorage\r\nexport const addContactData = contact => {\r\n  const data = getContactData();\r\n  data.push(contact);\r\n  setContactData(data);\r\n};\r\n","import createElements from './createElements.js';\r\nimport * as serv from './serviceStorage.js';\r\n\r\nconst {\r\n  createHeader,\r\n  createLogo,\r\n  createMain,\r\n  createButtonsGroup,\r\n  createTable,\r\n  createForm,\r\n  createFooter,\r\n  createRow,\r\n} = createElements;\r\n\r\n// const {\r\n//   getContactData,\r\n// } = serviceStorage;\r\n\r\n// 3. рендерит форму страницы\r\nexport const renderPhoneBook = (app, title) => {\r\n  // создать header страницы\r\n  const header = createHeader();\r\n  // создать заголовок\r\n  const logo = createLogo(title);\r\n  // cоздать main\r\n  const main = createMain();\r\n  // создать обертку для кнопок, передавая массив\r\n  const buttonGroup = createButtonsGroup([\r\n    // придумываем параметры кнопок\r\n    {\r\n      className: 'btn btn-primary mr-3 js-add',\r\n      type: 'button',\r\n      text: 'Добавить',\r\n    },\r\n    {\r\n      className: 'btn btn-danger',\r\n      type: 'button',\r\n      text: 'Удалить',\r\n    },\r\n  ]);\r\n  // создать таблицу\r\n  const table = createTable();\r\n  // создать форму/модалку\r\n  const {form, overlay} = createForm();\r\n  // создать footer страницы\r\n  const footer = createFooter();\r\n\r\n  // вставить заколовок\r\n  header.headerContainer.append(logo);\r\n  // добавить на страницу обертку для кнопок и таблицу и overlay\r\n  // т.к. возвращается объект, то append .btnWrapper\r\n  main.mainContainer.append(buttonGroup.btnWrapper, table, overlay);\r\n  // добавить header и main и footer на страницу\r\n  app.append(header, main, footer);\r\n\r\n  return {\r\n    list: table.tbody,\r\n    thead: table.thead,\r\n    logo,\r\n    btnAdd: buttonGroup.btns[0],\r\n    btnDel: buttonGroup.btns[1],\r\n    formOverlay: overlay,\r\n    form,\r\n  };\r\n};\r\n\r\nexport const renderContacts = (elem) => {\r\n  const data = serv.getContactData();\r\n  const allRow = data.map(createRow);\r\n  elem.append(...allRow);\r\n  return allRow;\r\n};\r\n\r\n","import createElements from './createElements.js';\r\nimport {removeContactData, addContactData} from './serviceStorage.js';\r\n\r\nconst {\r\n  createRow,\r\n} = createElements;\r\n\r\nconst modalControl = (btnAdd, formOverlay) => {\r\n  const openModal = () => {\r\n    formOverlay.classList.add('is-visible');\r\n  };\r\n  btnAdd.addEventListener('click', openModal);\r\n\r\n  const closeModal = () => {\r\n    formOverlay.classList.remove('is-visible');\r\n  };\r\n  formOverlay.addEventListener('click', e => {\r\n    const target = e.target;\r\n    if (target === formOverlay ||\r\n        target.classList.contains('close')) {\r\n      closeModal();\r\n    }\r\n  });\r\n\r\n  return {\r\n    closeModal,\r\n  };\r\n};\r\n\r\nconst deleteControl = (btnDel, list) => {\r\n  btnDel.addEventListener('click', () => {\r\n    document.querySelectorAll('.delete').forEach(del => {\r\n      del.classList.toggle('is-visible');\r\n    });\r\n  });\r\n\r\n  list.addEventListener('click', e => {\r\n    const target = e.target;\r\n    if (target.closest('.del-icon')) {\r\n      target.closest('.contact').remove();\r\n      // удалить из localStorage\r\n      const phoneDel = target.closest('.contact').childNodes[3].textContent;\r\n      removeContactData(phoneDel);\r\n    }\r\n  });\r\n};\r\n\r\nconst addContactPage = (contact, list) => {\r\n  document.querySelectorAll('.delete').forEach(del => {\r\n    del.classList.remove('is-visible');\r\n  });\r\n  list.append(createRow(contact));\r\n};\r\n\r\nconst formControl = (form, list, closeModal) => {\r\n  form.addEventListener('submit', e => {\r\n    // не дает обновлять страницу на submit\r\n    e.preventDefault();\r\n    // отправляет данные\r\n    const formData = new FormData(e.target);\r\n    const newContact = Object.fromEntries(formData);\r\n\r\n    // добавляет новый контакт в верстку\r\n    addContactPage(newContact, list);\r\n    // добавляет новый контакт в хранилище\r\n    addContactData(newContact);\r\n    // очищает форму в конце\r\n    form.reset();\r\n    // закрывает модалку\r\n    closeModal();\r\n  });\r\n};\r\n\r\nexport default {\r\n  modalControl,\r\n  deleteControl,\r\n  addContactPage,\r\n  formControl,\r\n};\r\n","import createElements from './script/createElements.js';\r\nimport {renderContacts, renderPhoneBook} from './script/render.js';\r\nimport control from './script/control.js';\r\nimport {getContactData, setContactData} from './script/serviceStorage.js';\r\n\r\n\r\nconst {\r\n  createRow,\r\n} = createElements;\r\n\r\nconst {\r\n  modalControl,\r\n  deleteControl,\r\n  formControl,\r\n} = control;\r\n\r\n// блочная область видимости -чтобы выносить в глобальную ОВ только то что нужно\r\n{\r\n  // 2. ф-я принимает селектор элемента и заголовок со страницы\r\n  // и передает в render функцию\r\n  const init = (selectApp, title) => {\r\n    // получить эл-т по селектору\r\n    const app = document.querySelector(selectApp);\r\n\r\n    const {\r\n      list,\r\n      thead,\r\n      logo,\r\n      btnAdd,\r\n      formOverlay,\r\n      form,\r\n      btnDel,\r\n    } = renderPhoneBook(app, title);\r\n\r\n    const listHoverRow = (list, logo) => {\r\n      const text = logo.textContent;\r\n\r\n      // наведение мыши - показывает контакт(телефон)\r\n      list.addEventListener('mouseover', (e) => {\r\n        logo.textContent = e.target.closest('.contact').phoneLink.textContent;\r\n      });\r\n      list.addEventListener('mouseout', () => {\r\n        logo.textContent = text;\r\n      });\r\n    };\r\n\r\n    // сортировать объект по полю (имени или фамилии)\r\n    // колл-бэк функция сортировки\r\n    const sortByField = function(field) {\r\n      return function(a, b) {\r\n        return a[field] < b[field] ? -1 : a[field] > b[field] ? 1 : 0;\r\n      };\r\n    };\r\n    // Функционал\r\n    const allRow = renderContacts(list);\r\n\r\n    const {closeModal} = modalControl(btnAdd, formOverlay);\r\n\r\n    // hoverRow(allRow, logo);\r\n    // ховер - показать контакт в header\r\n    listHoverRow(list, logo);\r\n\r\n    deleteControl(btnDel, list);\r\n    formControl(form, list, closeModal);\r\n\r\n    const data = getContactData();\r\n    setContactData(data);\r\n\r\n    // сортировка по имени или фамлилии\r\n    thead.addEventListener('click', e => {\r\n      const target = e.target;\r\n      const data = getContactData();\r\n      // сортировка по имени на событии в thead\r\n      if (target.classList.contains('firstName')) {\r\n        localStorage.setItem('sorting', 'name');\r\n        const sortData = data.sort(sortByField('name'));\r\n        // создать новые объекты в верстке\r\n        const sortRow = sortData.map(createRow);\r\n        // очистить элемент в верстке\r\n        list.innerHTML = '';\r\n        // вставить элементы в верстку\r\n        list.append(...sortRow);\r\n      }\r\n\r\n      // сортировка по фаимлии на событии в thead\r\n      if (target.classList.contains('surName')) {\r\n        localStorage.setItem('sorting', 'surname');\r\n        const sortData = data.sort(sortByField('surname'));\r\n        const sortRow = sortData.map(createRow);\r\n        // очистить элемент в верстке\r\n        list.innerHTML = '';\r\n        // вставить элементы в верстку\r\n        list.append(...sortRow);\r\n      }\r\n    });\r\n  };\r\n  // 1. выносит в window ф-ю инициализации app.\r\n  window.phonebookInit = init;\r\n}\r\n"],"names":["createContainer","container","document","createElement","classList","add","createButtonsGroup","params","btnWrapper","btns","map","className","type","text","button","textContent","append","createHeader","header","headerContainer","createLogo","title","h1","createMain","main","mainContainer","createTable","table","thead","insertAdjacentHTML","tbody","createForm","overlay","form","buttonGroup","createFooter","footer","footerContainer","createRow","name","firstName","surname","phone","tr","tdDel","buttonDel","tdName","tdSurname","tdPhone","phoneLink","href","tdEdit","style","cssText","getContactData","localStorage","getItem","JSON","parse","setContactData","data","setItem","stringify","createElements","addContactPage","contact","list","querySelectorAll","forEach","del","remove","modalControl","btnAdd","formOverlay","addEventListener","closeModal","e","target","contains","deleteControl","btnDel","toggle","closest","dataAfterDelete","filter","item","removeContactData","childNodes","formControl","preventDefault","formData","FormData","newContact","Object","fromEntries","push","addContactData","reset","control","init","selectApp","app","querySelector","logo","renderPhoneBook","sortByField","field","a","b","elem","allRow","renderContacts","listHoverRow","sortRow","sort","innerHTML","window","phonebookInit"],"sourceRoot":""}